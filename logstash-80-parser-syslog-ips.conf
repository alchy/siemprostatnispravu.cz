filter {
  if( "syslog-ips" in [type] ) {
    grok {  match => { "message" => "ApplicationProtocol: (?<app_proto>[^\,|\$]*)" } }
    grok {  match => { "message" => "IntrusionPolicy: (?<ips_policy>[^\,|\$]*)" } }
    grok {  match => { "message" => "NAPPolicy: (?<nap_policy>[^\,|\$]*)" } }
    grok {  match => { "message" => "HTTPResponse: (?<http_code>[^\,|\$]*)" } }
    grok {  match => { "message" => "DeviceUUID: (?<device_uuid>[^\,|\$]*)" } }
    grok {  match => { "message" => "SrcIP: (?<source.ip>[^\,|\$]*)" } }
    grok {  match => { "message" => "DstIP: (?<destination.ip>[^\,|\$]*)" } }
    grok {  match => { "message" => "SrcPort: (?<src_port>[^\,|\$]*)" } }
    grok {  match => { "message" => "DstPort: (?<dst_port>[^\,|\$]*)" } }
    grok {  match => { "message" => "Protocol: (?<proto>[^\,|\$]*)" } }
    grok {  match => { "message" => "IngressInterface: (?<ingress_iface>[^\,|\$]*)" } }
    grok {  match => { "message" => "EgressInterface: (?<egress_iface>[^\,|\$]*)" } }
    grok {  match => { "message" => "Priority: (?<prio>[^\,|\$]*)" } }
    grok {  match => { "message" => "GID: (?<gid>[^\,|\$]*)" } }
    grok {  match => { "message" => "SID: (?<sid>[^\,|\$]*)" } }
    grok {  match => { "message" => "Revision: (?<rev>[^\,|\$]*)" } }
    grok {  match => { "message" => "Message: (?<descr>[^\,|\$]*)" } }
    grok {  match => { "message" => "Classification: (?<classification>[^\,|\$]*)" } }
    grok {  match => { "message" => "User: (?<ips_user>[^\,|\$]*)" } }
    grok {  match => { "message" => "Client: (?<client_sw>[^\,|\$]*)" } }
    grok {  match => { "message" => "ACPolicy: (?<acl_policy>[^\,|\$]*)" } }
    grok {  match => { "message" => "InlineResult: (?<result>[^\,|\$]*)" } }
    grok {  match => { "message" => "VLAN_ID: (?<vlan_id>[^\,|\$]*)" } }
    mutate { remove_field => "[tags]" }

    grok {
      match => {
        "message" => "%{TIMESTAMP_ISO8601:syslogtimestamp} %{DATA:sensor} %{GREEDYDATA} %(?<cisco_msg_id>\w+-\d+-\d+): %{GREEDYDATA}"
      }
    }
    date {
      match => [ "syslogtimestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss", "ISO8601"]
    }
    if( "" in [source.ip] ) {
      mutate { add_field => { "src_fqdn" => "%{[source.ip]}" } }
      dns {
        reverse => [ "[src_fqdn]" ]
        action => "replace"
        hit_cache_size => 8192
        hit_cache_ttl => 300
      }
    }
    if( "" in [destination.ip] ) {
      mutate { add_field => { "dst_fqdn" => "%{[destination.ip]}" } }
      dns {
        reverse => [ "[dst_fqdn]" ]
        action => "replace"
        hit_cache_size => 8192
        hit_cache_ttl => 300
      }
    }
    if( "" in [origin_ip] ) {
      mutate { add_field => { "[origin_fqdn]" => "%{[origin_ip]}" } }
      dns {
        reverse => [ "[origin_fqdn]" ]
        action => "replace"
        hit_cache_size => 8192
        hit_cache_ttl => 300
      }
    }
    if( "" not in [result] ) {
      mutate { add_field => { "result" => "Unhandled" } }
    }
    if( "" in [sid] ) {
       mutate { add_field => { "event.action" => "Suspicious Traffic" } }
       mutate { add_field => { "event.category" => "network" } }
       mutate { add_field => { "event.module" => "ids/ips" } }
       if( "Would have blocked" in [result] ) {
         mutate { add_field => { "event.outcome" => "success" } }
       }
       if( "Blocked" in [result] ) {
         mutate { add_field => { "event.outcome" => "failure" } }
       }
       mutate { add_field => { "event.type" => "connection" } }
       #mutate { add_field => { "[event][action]" => "Suspicious Traffic" } }
       #mutate { add_field => { "[event][category]" => "network" } }
       #mutate { add_field => { "[event][module]" => "ids/ips" } }
       #mutate { add_field => { "[event][outcome]" => "%{[result]}" } }
    }
    #if("_grokparserfailure" not in [tags]) {
    #  mutate { remove_field => "[message]" }
    #  mutate { remove_field => "[syslogtimestamp]" }
    #}
  }
}
